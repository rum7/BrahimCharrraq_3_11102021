.list-item {
	padding: 1.5em 1em;
	text-align: left;
	border-radius: 1em;
	box-shadow: 0 4px 11px rgba(0, 0, 0, 0.2);
}

.btn {
    padding: 1em 1.5em;
    color: $txt-fond-sombre;
    transition: 250ms;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    &--gradient {
        background-image: 
            radial-gradient(
                100% 50% at 20% 10%,
                #FF79DA 0%,
                #9356DC 200%);
    }

    &--radius {
        border-radius: 2em;
    }
    &:hover {
        opacity: 0.8;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    }
}

button {
    & .heart-away{
        display: block;
        transform: scale(1);
        transition: all 0.5s;
    }
    & .heart-hover {
        display: block;
        position: absolute;
        top: 0;
        transform: scale(0);
        transition: all 0.5s;
        background-color: black;
        background-image: linear-gradient(0deg, $rose-secondaire, $violet-primaire);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        -moz-background-clip: text;
        -moz-text-fill-color: transparent;
    }
}
button:hover {
    & .heart-away {
        opacity: 0;
        transform: scale(0);

    }
    & .heart-hover {
        opacity: 1;
        transform: scale(1);
    }
}


/* Animation Loader */

.loader {
    display: flex;
    position: fixed;
    z-index: 1;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    background-color: white;
    animation: 1s fadeOut 5500ms ease forwards;
    & svg {
        animation: 2s fadeIn ease forwards,
        1s fadeOut 5000ms ease forwards
        ;
        width: 80vh;
        //position: absolute;
        //height: 100%;
        & g {
            animation: 2s fadeOut 3000ms ease forwards;
        }
    }
}

.text {
    font: 5em 'Shrikhand', cursive;

    &--nofill {
        fill: none;
        stroke-width: 1;
        stroke-linejoin: round;
        stroke-dasharray: $dash $dash-space;
        stroke-dashoffset: 0;
        animation: stroke $time infinite linear;

        @for $item from 1 through $max {
            &:nth-child(#{$max}n + #{$item}) {
                $color: nth($colors, $item);
                stroke: $color;
                animation-delay: -($time-step * $item);
            }
        }
    }
    &--fill {
        fill: #353535;
        stroke-width: 1;
        stroke: #353535;
        animation: 2s fadeIn 3000ms ease both;
    }
}

@keyframes stroke {
    100% {
        stroke-dashoffset: -($dash + $dash-gap) * $max;
    }
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes fadeInOut {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

@keyframes fadeOut {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
        visibility: hidden;
    }
}